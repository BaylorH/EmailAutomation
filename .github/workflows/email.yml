name: Email Automation
on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'  # Every 30 minutes

jobs:
  email:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Validate CLIENT_ID prefix
        run: |
          if [[ "$CLIENT_ID" != 54cec* ]]; then
            echo "❌ CLIENT_ID does not start with expected prefix"
            exit 1
          else
            echo "✅ CLIENT_ID prefix looks correct"
          fi
        env:
          CLIENT_ID: ${{ secrets.AZURE_API_APP_ID }}

      - name: Write service account key
        # Expect a repo secret named FIREBASE_SERVICE_ACCOUNT_JSON containing the full JSON
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}' > $RUNNER_TEMP/sa.json
          
      - name: Run email script
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/sa.json
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          FIREBASE_SA_KEY: ${{ secrets.FIREBASE_SA_KEY }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_API_APP_ID: ${{ secrets.AZURE_API_APP_ID }}
          AZURE_API_CLIENT_SECRET: ${{ secrets.AZURE_API_CLIENT_SECRET }}
          # Google OAuth (helper Gmail account for Drive/Sheets)
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
          GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
          GOOGLE_REFRESH_TOKEN: ${{ secrets.GOOGLE_REFRESH_TOKEN }}
        # run: python noPopup_signin_emails_to_excel.py
        # run: python main.py
        run: python scheduler_runner.py
